<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GameFrameX.Core</name>
    </assembly>
    <members>
        <member name="M:GameFrameX.Core.Cache.CacheSetup.AddCache(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            缓存注册（新生命Redis组件）
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:GameFrameX.Core.Cache.SqlSugarCache">
            <summary>
            SqlSugar二级缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Cache.SqlSugarCache._cache">
            <summary>
            系统缓存服务
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Const.CacheConst">
            <summary>
            缓存相关常量
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyUser">
            <summary>
            用户缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyUserButton">
            <summary>
            用户权限缓存（按钮集合）
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyUserOrg">
            <summary>
            用户机构缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyRoleMaxDataScope">
            <summary>
            角色最大数据范围缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyUserOnline">
            <summary>
            在线用户缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyVerCode">
            <summary>
            图形验证码缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyTenant">
            <summary>
            租户缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyConst">
            <summary>
            常量下拉框
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyAll">
            <summary>
            所有缓存关键字集合
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.SqlSugar">
            <summary>
            SqlSugar二级缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyOpenAccess">
            <summary>
            开放接口身份缓存
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CacheConst.KeyOpenAccessNonce">
            <summary>
            开放接口身份随机数缓存
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Const.ClaimConst">
            <summary>
            Claim相关常量
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.AccountType">
            <summary>
            账号类型
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.OrgId">
            <summary>
            组织机构Id
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.OrgName">
            <summary>
            组织机构名称
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.OrgType">
            <summary>
            组织机构类型
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.OpenId">
            <summary>
            微信OpenId
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.ClaimConst.LoginMode">
            <summary>
            登录模式PC、APP
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Const.CommonConst">
            <summary>
            通用常量
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysDemoEnv">
            <summary>
            演示环境开关
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysPassword">
            <summary>
            默认密码
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysSecondVer">
            <summary>
            登录二次验证
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysCaptcha">
            <summary>
            开启图形验证码
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysWatermark">
            <summary>
            开启水印
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysOpLog">
            <summary>
            开启操作日志
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysTokenExpire">
            <summary>
            Token过期时间
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysRefreshTokenExpire">
            <summary>
            RefreshToken过期时间
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysSingleLogin">
            <summary>
            单用户登录
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysAdminRole">
            <summary>
            系统管理员角色编码
            </summary>
        </member>
        <member name="F:GameFrameX.Core.Const.CommonConst.SysSensitiveDetection">
            <summary>
            开启全局脱敏处理（默认不开启）
            </summary>
        </member>
        <member name="T:GameFrameX.Core.EventBus.AppEventSubscriber">
            <summary>
            事件订阅
            </summary>
        </member>
        <member name="M:GameFrameX.Core.EventBus.AppEventSubscriber.CreateExLog(Furion.EventBus.EventHandlerExecutingContext)">
            <summary>
            增加异常日志
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.EventBus.AppEventSubscriber.SendOrderErrorMail(Furion.EventBus.EventHandlerExecutingContext)">
            <summary>
            发送异常邮件
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.EventBus.AppEventSubscriber.Dispose">
            <summary>
            释放服务作用域
            </summary>
        </member>
        <member name="T:GameFrameX.Core.EventBus.EventConsumer`1">
            <summary>
            Redis 消息扩展
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:GameFrameX.Core.EventBus.EventConsumer`1.Consumer">
            <summary>
            消费者
            </summary>
        </member>
        <member name="P:GameFrameX.Core.EventBus.EventConsumer`1.Builder">
            <summary>
            ConsumerBuilder
            </summary>
        </member>
        <member name="E:GameFrameX.Core.EventBus.EventConsumer`1.Received">
            <summary>
            消息回调
            </summary>
        </member>
        <member name="M:GameFrameX.Core.EventBus.EventConsumer`1.#ctor(NewLife.Caching.FullRedis,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:GameFrameX.Core.EventBus.EventConsumer`1.Start">
            <summary>
            启动
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:GameFrameX.Core.EventBus.EventConsumer`1.Stop">
            <summary>
            停止
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.EventBus.EventConsumer`1.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:GameFrameX.Core.EventBus.EventConsumer`1.Dispose(System.Boolean)">
            <summary>
            释放
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:GameFrameX.Core.EventBus.RedisEventSourceStorer">
            <summary>
            Redis自定义事件源存储器
            </summary>
        </member>
        <member name="F:GameFrameX.Core.EventBus.RedisEventSourceStorer._eventConsumer">
            <summary>
            消费者
            </summary>
        </member>
        <member name="F:GameFrameX.Core.EventBus.RedisEventSourceStorer._channel">
            <summary>
            内存通道事件源存储器
            </summary>
        </member>
        <member name="F:GameFrameX.Core.EventBus.RedisEventSourceStorer._redis">
            <summary>
            Redis 连接对象
            </summary>
        </member>
        <member name="F:GameFrameX.Core.EventBus.RedisEventSourceStorer._routeKey">
            <summary>
            路由键
            </summary>
        </member>
        <member name="M:GameFrameX.Core.EventBus.RedisEventSourceStorer.#ctor(NewLife.Caching.ICache,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="redis">Redis 连接对象</param>
            <param name="routeKey">路由键</param>
            <param name="capacity">存储器最多能够处理多少消息，超过该容量进入等待写入</param>
        </member>
        <member name="M:GameFrameX.Core.EventBus.RedisEventSourceStorer.WriteAsync(Furion.EventBus.IEventSource,System.Threading.CancellationToken)">
            <summary>
            将事件源写入存储器
            </summary>
            <param name="eventSource">事件源对象</param>
            <param name="cancellationToken">取消任务 Token</param>
            <returns><see cref="T:System.Threading.Tasks.ValueTask"/></returns>
        </member>
        <member name="M:GameFrameX.Core.EventBus.RedisEventSourceStorer.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            从存储器中读取一条事件源
            </summary>
            <param name="cancellationToken">取消任务 Token</param>
            <returns>事件源对象</returns>
        </member>
        <member name="M:GameFrameX.Core.EventBus.RedisEventSourceStorer.Dispose">
            <summary>
            释放非托管资源
            </summary>
        </member>
        <member name="T:GameFrameX.Core.EventBus.RetryEventHandlerExecutor">
            <summary>
            事件执行器-超时控制、失败重试熔断等等
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Hub.IOnlineUserHub.OnlineUserList(GameFrameX.Core.Hub.Dto.OnlineUserList)">
            <summary>
            在线用户列表
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.IOnlineUserHub.ForceOffline(System.Object)">
            <summary>
            强制下线
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.IOnlineUserHub.PublicNotice(GameFrameX.Entity.System.SysNotice)">
            <summary>
            发布站内消息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.IOnlineUserHub.ReceiveMessage(System.Object)">
            <summary>
            接收消息
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Hub.OnlineUserHub">
            <summary>
            在线用户集线器
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Hub.OnlineUserHub.OnConnectedAsync">
            <summary>
            连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.OnlineUserHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            断开
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.OnlineUserHub.ForceOffline(GameFrameX.Core.Hub.Dto.OnlineUserHubInput)">
            <summary>
            强制下线
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.OnlineUserHub.ClientsSendMessage(GameFrameX.Core.Service.Message.Dto.MessageInput)">
            <summary>
            发送信息给某个人
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.OnlineUserHub.ClientsSendMessagetoAll(GameFrameX.Core.Service.Message.Dto.MessageInput)">
            <summary>
            发送信息给所有人
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.OnlineUserHub.ClientsSendMessagetoOther(GameFrameX.Core.Service.Message.Dto.MessageInput)">
            <summary>
            发送消息给某些人（除了本人）
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Hub.OnlineUserHub.ClientsSendMessagetoUsers(GameFrameX.Core.Service.Message.Dto.MessageInput)">
            <summary>
            发送消息给某些人
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Job.DynamicJobCompiler">
            <summary>
            动态作业编译
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Job.DynamicJobCompiler.BuildJob(System.String)">
            <summary>
            编译代码并返回其中实现 IJob 的类型
            </summary>
            <param name="script">动态编译的作业代码</param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Job.LogJob">
            <summary>
            清理日志作业任务
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Job.OnlineUserJob">
            <summary>
            清理在线用户作业任务
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Logging.DatabaseLoggingWriter">
            <summary>
            数据库日志写入器
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Logging.DatabaseLoggingWriter.GetIpAddress(System.String)">
            <summary>
            解析IP地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Logging.DatabaseLoggingWriter.Dispose">
            <summary>
            释放服务作用域
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Logging.ElasticSearchLoggingWriter">
            <summary>
            ES日志写入器
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Logging.ElasticSearchSetup">
            <summary>
            ES服务注册
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Logging.LoggingSetup.AddLoggingSetup(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            日志注册
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:GameFrameX.Core.OAuth.OAuthSetup.AddOAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            三方授权登录OAuth注册
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:GameFrameX.Core.Option.APIJSONOptions">
            <summary>
            APIJSON配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSONOptions.Roles">
            <summary>
            角色集合
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.APIJSON_Role">
            <summary>
            APIJSON角色权限
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSON_Role.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSON_Role.Select">
            <summary>
            查询
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSON_Role.Insert">
            <summary>
            增加
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSON_Role.Update">
            <summary>
            更新
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSON_Role.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.APIJSON_RoleItem">
            <summary>
            APIJSON角色权限内容
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSON_RoleItem.Table">
            <summary>
            表集合
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSON_RoleItem.Column">
            <summary>
            列集合
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.APIJSON_RoleItem.Filter">
            <summary>
            过滤器
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.CacheOptions">
            <summary>
            缓存配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CacheOptions.Prefix">
            <summary>
            缓存前缀
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CacheOptions.CacheType">
            <summary>
            缓存类型
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CacheOptions.Redis">
            <summary>
            Redis缓存
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.RedisOption">
            <summary>
            Redis缓存
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.RedisOption.MaxMessageSize">
            <summary>
            最大消息大小
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.ClusterOptions">
            <summary>
            集群配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterOptions.Enabled">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterOptions.ServerId">
            <summary>
            服务器标识
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterOptions.ServerIp">
            <summary>
            服务器IP
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterOptions.SignalR">
            <summary>
            SignalR配置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterOptions.DataProtecteKey">
            <summary>
            数据保护key
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterOptions.IsSentinel">
            <summary>
            是否哨兵模式
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterOptions.SentinelConfig">
            <summary>
            哨兵配置
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.ClusterSignalR">
            <summary>
            集群SignalR配置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterSignalR.RedisConfiguration">
            <summary>
            Redis连接字符串
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.ClusterSignalR.ChannelPrefix">
            <summary>
            缓存前缀
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.StackExchangeSentinelConfig">
            <summary>
            哨兵配置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.StackExchangeSentinelConfig.ServiceName">
            <summary>
            master名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.StackExchangeSentinelConfig.Password">
            <summary>
            master访问密码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.StackExchangeSentinelConfig.SentinelPassword">
            <summary>
            哨兵访问密码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.StackExchangeSentinelConfig.EndPoints">
            <summary>
            哨兵端口
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.StackExchangeSentinelConfig.DefaultDb">
            <summary>
            默认库
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.StackExchangeSentinelConfig.MainPrefix">
            <summary>
            主前缀
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.StackExchangeSentinelConfig.SignalRChannelPrefix">
            <summary>
            SignalR前缀
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.CodeGenOptions">
            <summary>
            代码生成配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CodeGenOptions.EntityAssemblyNames">
            <summary>
            数据库实体程序集名称集合
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CodeGenOptions.BaseEntityNames">
            <summary>
            数据库基础实体名称集合
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CodeGenOptions.EntityBaseColumn">
            <summary>
            基础实体名
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CodeGenOptions.FrontRootPath">
            <summary>
            前端文件根目录
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CodeGenOptions.BackendApplicationNamespaces">
            <summary>
            后端生成到的项目
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.CryptogramOptions">
            <summary>
            密码配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CryptogramOptions.StrongPassword">
            <summary>
            是否开启密码强度验证
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CryptogramOptions.PasswordStrengthValidation">
            <summary>
            密码强度验证正则表达式
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CryptogramOptions.PasswordStrengthValidationMsg">
            <summary>
            密码强度验证提示
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CryptogramOptions.CryptoType">
            <summary>
            密码类型
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CryptogramOptions.PublicKey">
            <summary>
            公钥
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.CryptogramOptions.PrivateKey">
            <summary>
            私钥
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.DbConnectionOptions">
            <summary>
            数据库配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.DbConnectionOptions.EnableConsoleSql">
            <summary>
            启用控制台打印SQL
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.DbConnectionOptions.ConnectionConfigs">
            <summary>
            数据库集合
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.DbConnectionConfig">
            <summary>
            数据库连接配置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.DbConnectionConfig.DbSettings">
            <summary>
            数据库设置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.DbConnectionConfig.TableSettings">
            <summary>
            表设置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.DbConnectionConfig.SeedSettings">
            <summary>
            种子设置
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.DbSettings">
            <summary>
            数据库设置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.DbSettings.EnableInitDb">
            <summary>
            启用库表初始化
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.DbSettings.EnableDiffLog">
            <summary>
            启用库表差异日志
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.DbSettings.EnableUnderLine">
            <summary>
            启用驼峰转下划线
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.TableSettings">
            <summary>
            表设置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.TableSettings.EnableInitTable">
            <summary>
            启用表初始化
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.TableSettings.EnableIncreTable">
            <summary>
            启用表增量更新
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.SeedSettings">
            <summary>
            种子设置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.SeedSettings.EnableInitSeed">
            <summary>
            启用种子初始化
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.SeedSettings.EnableIncreSeed">
            <summary>
            启用种子增量更新
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.EmailOptions">
            <summary>
            邮件配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.Host">
            <summary>
            主机
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.Port">
            <summary>
            端口
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.DefaultFromEmail">
            <summary>
            默认发件者邮箱
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.DefaultToEmail">
            <summary>
            默认接收人邮箱
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.EnableSsl">
            <summary>
            启用SSL
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.UseDefaultCredentials">
            <summary>
            是否使用默认凭据
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.UserName">
            <summary>
            邮箱账号
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.Password">
            <summary>
            邮箱密码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EmailOptions.DefaultFromName">
            <summary>
            默认邮件标题
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.EnumOptions">
            <summary>
            枚举配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.EnumOptions.EntityAssemblyNames">
            <summary>
            枚举实体程序集名称集合
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.OAuthOptions">
            <summary>
            第三方登录授权配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.OAuthOptions.Weixin">
            <summary>
            Weixin配置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.OAuthOptions.Gitee">
            <summary>
            Gitee配置
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.PayCallBackOptions">
            <summary>
            支付回调配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.PayCallBackOptions.WechatPayUrl">
            <summary>
            微信支付回调
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.PayCallBackOptions.WechatRefundUrl">
            <summary>
            微信退款回调
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.PayCallBackOptions.AlipayUrl">
            <summary>
            支付宝支付回调
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.PayCallBackOptions.AlipayRefundUrl">
            <summary>
            支付宝退款回调
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.IpRateLimitingOptions">
            <summary>
            IP限流配置选项
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.IpRateLimitPoliciesOptions">
            <summary>
            IP限流策略配置选项
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.ClientRateLimitingOptions">
            <summary>
            客户端限流配置选项
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.ClientRateLimitPoliciesOptions">
            <summary>
            客户端限流策略配置选项
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.SMSOptions">
            <summary>
            短信配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.SMSOptions.Aliyun">
            <summary>
            Aliyun
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.SMSSettings.AccessKeyId">
            <summary>
            AccessKey ID
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.SMSSettings.AccessKeySecret">
            <summary>
            AccessKey Secret
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.SMSSettings.SignName">
            <summary>
            短信签名
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.SMSSettings.TemplateCode">
            <summary>
            短信模板
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.UploadOptions">
            <summary>
            文件上传配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.UploadOptions.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.UploadOptions.MaxSize">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.UploadOptions.ContentType">
            <summary>
            上传格式
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.UploadOptions.EnableMd5">
            <summary>
            启用文件MD5验证
            </summary>
            <remarks>防止重复上传</remarks>
        </member>
        <member name="T:GameFrameX.Core.Option.OSSProviderOptions">
            <summary>
            对象存储配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.OSSProviderOptions.IsEnable">
            <summary>
            是否启用OSS存储
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.OSSProviderOptions.Bucket">
            <summary>
            自定义桶名称 不能直接使用Provider来替代桶名称
            例：阿里云 1.只能包括小写字母，数字，短横线（-）2.必须以小写字母或者数字开头 3.长度必须在3-63字节之间
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.WechatOptions">
            <summary>
            微信相关配置选项
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Option.WechatPayOptions">
            <summary>
            微信支付配置选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Option.WechatPayOptions.AppId">
            <summary>
            微信公众平台AppId、开放平台AppId、小程序AppId、企业微信CorpId
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Provider.AdminResultProvider">
            <summary>
            全局规范化结果
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Provider.AdminResultProvider.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Furion.FriendlyException.ExceptionMetadata)">
            <summary>
            异常返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Provider.AdminResultProvider.OnSucceeded(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,System.Object)">
            <summary>
            成功返回值
            </summary>
            <param name="context"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Provider.AdminResultProvider.OnValidateFailed(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Furion.DataValidation.ValidationMetadata)">
            <summary>
            验证失败返回值
            </summary>
            <param name="context"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Provider.AdminResultProvider.OnResponseStatusCodes(Microsoft.AspNetCore.Http.HttpContext,System.Int32,Furion.UnifyResult.UnifyResultSettingsOptions)">
            <summary>
            特定状态码返回值
            </summary>
            <param name="context"></param>
            <param name="statusCode"></param>
            <param name="unifyResultSettings"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Provider.AdminResultProvider.RESTfulResult(System.Int32,System.Boolean,System.Object,System.Object)">
            <summary>
            返回 RESTful 风格结果集
            </summary>
            <param name="statusCode"></param>
            <param name="succeeded"></param>
            <param name="data"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Provider.AdminResult`1">
            <summary>
            全局返回结果
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:GameFrameX.Core.Provider.AdminResult`1.Code">
            <summary>
            状态码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Provider.AdminResult`1.Type">
            <summary>
            类型success、warning、error
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Provider.AdminResult`1.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Provider.AdminResult`1.Result">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Provider.AdminResult`1.Extras">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Provider.AdminResult`1.Time">
            <summary>
            时间
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.APIJSON.APIJSONService">
            <summary>
            APIJSON服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.APIJSONService.Post(Newtonsoft.Json.Linq.JObject)">
            <summary>
            统一入口
            </summary>
            <param name="jobject"></param>
            <remarks>参数：{"[]":{"SYS_LOG_OP":{}}}</remarks>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.APIJSON.FuncList">
            <summary>
            自定义方法
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.FuncList.Merge(System.Object,System.Object)">
            <summary>
            字符串相加
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.FuncList.MergeObj(System.Object,System.Object)">
            <summary>
            对象合并
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.FuncList.IsContain(System.Object,System.Object)">
            <summary>
            是否包含
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.IdentityService.GetUserIdentity">
            <summary>
            获取当前用户Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.IdentityService.GetUserRoleName">
            <summary>
            获取当前用户权限名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.IdentityService.GetRole">
            <summary>
            获取当前用户权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.IdentityService.GetSelectRole(System.String)">
            <summary>
            获取当前表的可查询字段
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.IdentityService.ColIsRole(System.String,System.String[])">
            <summary>
            当前列是否在角色里面
            </summary>
            <param name="col"></param>
            <param name="selectrole"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.APIJSON.SelectTable">
             <summary>
            
             </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.#ctor(GameFrameX.Core.Service.APIJSON.IdentityService,GameFrameX.Core.Service.APIJSON.TableMapper,SqlSugar.ISqlSugarClient)">
             <summary>
            
             </summary>
             <param name="identityService"></param>
             <param name="tableMapper"></param>
             <param name="dbClient"></param>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.IsTable(System.String)">
            <summary>
            判断表名是否正确
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.IsCol(System.String,System.String)">
            <summary>
            判断表的列名是否正确
            </summary>
            <param name="table"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.ExecFunc(System.String,System.Object[],System.Type[])">
            <summary>
            动态调用方法
            </summary>
            <param name="funcname"></param>
            <param name="param"></param>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.GetTableData(System.String,System.Int32,System.Int32,System.Int32,System.String,Newtonsoft.Json.Linq.JObject)">
             <summary>
            
             </summary>
             <param name="subtable"></param>
             <param name="page"></param>
             <param name="count"></param>
             <param name="query"></param>
             <param name="json"></param>
             <param name="dd"></param>
             <returns></returns>
             <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.GetFirstData(System.String,System.String,Newtonsoft.Json.Linq.JObject)">
             <summary>
            
             </summary>
             <param name="subtable"></param>
             <param name="json"></param>
             <param name="dd"></param>
             <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.Query(System.String)">
            <summary>
            解析并查询
            </summary>
            <param name="queryJson"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.QuerySingle(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            单表查询
            </summary>
            <param name="queryObj"></param>
            <param name="nodeName">返回数据的节点名称  默认为 infos</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.ToSql(Newtonsoft.Json.Linq.JObject)">
            <summary>
            获取查询语句
            </summary>
            <param name="queryObj"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.SelectTable.Query(Newtonsoft.Json.Linq.JObject)">
            <summary>
            解析并查询
            </summary>
            <param name="queryObj"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.APIJSON.TableMapper">
            <summary>
            表名映射
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.APIJSON.TableMapper.GetTableName(System.String)">
            <summary>
            获取表别名
            </summary>
            <param name="oldname"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.Auth.Dto.LoginInput">
            <summary>
            用户登录参数
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginInput.Account">
            <summary>
            账号
            </summary>
            <example>admin</example>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginInput.Password">
            <summary>
            密码
            </summary>
            <example>123456</example>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginInput.CodeId">
            <summary>
            验证码Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginInput.Code">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginPhoneInput.Phone">
            <summary>
            手机号码
            </summary>
            <example>admin</example>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginPhoneInput.Code">
            <summary>
            验证码
            </summary>
            <example>123456</example>
        </member>
        <member name="T:GameFrameX.Core.Service.Auth.Dto.LoginOutput">
            <summary>
            用户登录结果
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginOutput.AccessToken">
            <summary>
            令牌Token
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginOutput.RefreshToken">
            <summary>
            刷新Token
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput">
            <summary>
            用户登录信息
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.Id">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.Account">
            <summary>
            账号名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.AccountType">
            <summary>
            账号类型
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.Introduction">
            <summary>
            个人简介
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.Signature">
            <summary>
            电子签名
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.OrgName">
            <summary>
            机构名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.OrgType">
            <summary>
            机构类型
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.PosName">
            <summary>
            职位名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Auth.Dto.LoginUserOutput.Buttons">
            <summary>
            按钮权限集合
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Auth.SysAuthService">
            <summary>
            系统登录授权服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.Login(GameFrameX.Core.Service.Auth.Dto.LoginInput)">
            <summary>
            账号密码登录
            </summary>
            <param name="input"></param>
            <remarks>用户名/密码：superadmin/123456</remarks>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.LoginPhone(GameFrameX.Core.Service.Auth.Dto.LoginPhoneInput)">
            <summary>
            手机号登录
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.CreateToken(GameFrameX.Entity.System.SysUser)">
            <summary>
            生成Token令牌
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.GetUserInfo">
            <summary>
            获取登录账号
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.GetRefreshToken(System.String)">
            <summary>
            获取刷新Token
            </summary>
            <param name="accessToken"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.Logout">
            <summary>
            退出系统
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.GetLoginConfig">
            <summary>
            获取登录配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.GetWatermarkConfig">
            <summary>
            获取水印配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.GetCaptcha">
            <summary>
            获取验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.SwaggerCheckUrl">
            <summary>
            Swagger登录检查
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Auth.SysAuthService.SwaggerSubmitUrl(Furion.SpecificationDocument.SpecificationAuth)">
            <summary>
            Swagger登录提交
            </summary>
            <param name="auth"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.Cache.SysCacheService">
            <summary>
            系统缓存服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.GetKeyList">
            <summary>
            获取缓存键名集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.Set(System.String,System.Object)">
            <summary>
            增加缓存
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.Set(System.String,System.Object,System.TimeSpan)">
            <summary>
            增加缓存并设置过期时间
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expire"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.Get``1(System.String)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.ExistKey(System.String)">
            <summary>
            检查缓存是否存在
            </summary>
            <param name="key">键</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.RemoveByPrefixKey(System.String)">
            <summary>
            根据键名前缀删除缓存
            </summary>
            <param name="prefixKey">键名前缀</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.GetKeysByPrefixKey(System.String)">
            <summary>
            根据键名前缀获取键名集合
            </summary>
            <param name="prefixKey">键名前缀</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.GetValue(System.String)">
            <summary>
            获取缓存值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Cache.SysCacheService.GetOrAdd``1(System.String,System.Func{System.String,``0},System.Int32)">
            <summary>
            获取或添加缓存，在数据不存在时执行委托请求数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="callback"></param>
            <param name="expire">过期时间，单位秒</param>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.Config.Dto.PageConfigInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Config.Dto.PageConfigInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Config.Dto.PageConfigInput.GroupCode">
            <summary>
            分组编码
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Config.SysConfigService">
            <summary>
            系统参数配置服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.Page(GameFrameX.Core.Service.Config.Dto.PageConfigInput)">
            <summary>
            获取参数配置分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.GetList">
            <summary>
            获取参数配置列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.AddConfig(GameFrameX.Core.Service.Config.Dto.AddConfigInput)">
            <summary>
            增加参数配置
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.UpdateConfig(GameFrameX.Core.Service.Config.Dto.UpdateConfigInput)">
            <summary>
            更新参数配置
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.DeleteConfig(GameFrameX.Core.Service.Config.Dto.DeleteConfigInput)">
            <summary>
            删除参数配置
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.BatchDeleteConfig(System.Collections.Generic.List{System.Int64})">
            <summary>
            批量删除参数配置
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.GetDetail(GameFrameX.Core.Service.Config.Dto.ConfigInput)">
            <summary>
            获取参数配置详情
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.GetConfigValue``1(System.String)">
            <summary>
            获取参数配置值
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.GetGroupList">
            <summary>
            获取分组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.GetTokenExpire">
            <summary>
            获取 Token 过期时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Config.SysConfigService.GetRefreshTokenExpire">
            <summary>
            获取 RefreshToken 过期时间
            </summary>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileInput.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileInput.Url">
            <summary>
            文件Url
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.PageFileInput.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.PageFileInput.StartTime">
            <summary>
            开始时间
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.PageFileInput.EndTime">
            <summary>
            结束时间
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.UploadFileFromBase64Input.FileDataBase64">
            <summary>
            文件内容
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.UploadFileFromBase64Input.ContentType">
            <summary>
            文件类型( "image/jpeg",)
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.UploadFileFromBase64Input.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.UploadFileFromBase64Input.Path">
            <summary>
            保存路径
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileOutput.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileOutput.Provider">
            <summary>
            提供者
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileOutput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileOutput.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileOutput.SizeKb">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileOutput.Suffix">
            <summary>
            后缀
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileOutput.FilePath">
            <summary>
            路径
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.File.Dto.FileOutput.FileName">
            <summary>
            文件名称
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.File.SysFileService">
            <summary>
            系统文件服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.Page(GameFrameX.Core.Service.File.Dto.PageFileInput)">
            <summary>
            获取文件分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.UploadFile(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="file"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.UploadFileFromBase64(System.String,System.String,System.String,System.String)">
            <summary>
            上传文件Base64
            </summary>
            <param name="strBase64"></param>
            <param name="fileName"></param>
            <param name="contentType"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.UploadFileFromBase64(GameFrameX.Core.Service.File.Dto.UploadFileFromBase64Input)">
            <summary>
            上传文件Base64
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.UploadFiles(System.Collections.Generic.List{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            上传多文件
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.DownloadFile(GameFrameX.Core.Service.File.Dto.FileInput)">
            <summary>
            根据文件Id或Url下载
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.DeleteFile(GameFrameX.Core.Service.File.Dto.DeleteFileInput)">
            <summary>
            删除文件
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.UpdateFile(GameFrameX.Core.Service.File.Dto.FileInput)">
            <summary>
            更新文件
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.GetFile(GameFrameX.Core.Service.File.Dto.FileInput)">
            <summary>
            获取文件
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.HandleUploadFile(Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="file">文件</param>
            <param name="savePath">路径</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.UploadAvatar(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传头像
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.File.SysFileService.UploadSignature(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传电子签名
            </summary>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuInput.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuInput.Type">
            <summary>
            菜单类型（1目录 2菜单 3按钮）
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.AddMenuInput.Title">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Menu.Dto.MenuOutput">
            <summary>
            系统菜单返回结果
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Pid">
            <summary>
            父Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Type">
            <summary>
            菜单类型（0目录 1菜单 2按钮）
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Path">
            <summary>
            路由地址
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Component">
            <summary>
            组件路径
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Permission">
            <summary>
            权限标识
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Redirect">
            <summary>
            重定向
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.OrderNo">
            <summary>
            排序
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Meta">
            <summary>
            菜单Meta
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.MenuOutput.Children">
            <summary>
            菜单子项
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Menu.Dto.SysMenuMeta">
            <summary>
            菜单Meta配置
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.SysMenuMeta.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.SysMenuMeta.Icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.SysMenuMeta.IsIframe">
            <summary>
            是否内嵌
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.SysMenuMeta.IsLink">
            <summary>
            外链链接
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.SysMenuMeta.IsHide">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.SysMenuMeta.IsKeepAlive">
            <summary>
            是否缓存
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Menu.Dto.SysMenuMeta.IsAffix">
            <summary>
            是否固定
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Menu.Dto.SysMenuMapper">
            <summary>
            配置菜单对象映射
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Menu.SysMenuService">
            <summary>
            系统菜单服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.GetLoginMenuTree">
            <summary>
            获取登录菜单树
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.DeleteBtnFromMenuTree(System.Collections.Generic.List{GameFrameX.Entity.System.SysMenu})">
            <summary>
            删除登录菜单树里面的按钮
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.GetList(GameFrameX.Core.Service.Menu.Dto.MenuInput)">
            <summary>
            获取菜单列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.AddMenu(GameFrameX.Core.Service.Menu.Dto.AddMenuInput)">
            <summary>
            增加菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.UpdateMenu(GameFrameX.Core.Service.Menu.Dto.UpdateMenuInput)">
            <summary>
            更新菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.DeleteMenu(GameFrameX.Core.Service.Menu.Dto.DeleteMenuInput)">
            <summary>
            删除菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.CheckMenuParam(GameFrameX.Entity.System.SysMenu)">
            <summary>
            增加和编辑时检查菜单数据
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.GetOwnBtnPermList">
            <summary>
            获取用户拥有按钮权限集合（缓存）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.GetAllBtnPermList">
            <summary>
            获取系统所有按钮权限集合（缓存）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.DeleteMenuCache">
            <summary>
            清除菜单和按钮缓存
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Menu.SysMenuService.GetMenuIdList">
            <summary>
            获取当前用户菜单Id集合
            </summary>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.Message.Dto.MessageInput.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Message.Dto.MessageInput.UserIds">
            <summary>
            用户ID列表
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Message.Dto.MessageInput.Title">
            <summary>
            消息标题
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Message.Dto.MessageInput.MessageType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Message.Dto.MessageInput.Message">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Message.SysMessageService">
            <summary>
            系统消息发送服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Message.SysMessageService.SendAllUser(GameFrameX.Core.Service.Message.Dto.MessageInput)">
            <summary>
            发送消息给所有人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Message.SysMessageService.SendOtherUser(GameFrameX.Core.Service.Message.Dto.MessageInput)">
            <summary>
            发送消息给除了发送人的其他人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Message.SysMessageService.SendUser(GameFrameX.Core.Service.Message.Dto.MessageInput)">
            <summary>
            发送消息给某个人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Message.SysMessageService.SendUsers(GameFrameX.Core.Service.Message.Dto.MessageInput)">
            <summary>
            发送消息给某些人
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Message.SysMessageService.SendEmail(System.String,System.String,System.Boolean)">
            <summary>
            发送邮件
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="isHtml"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.OAuth.SysOAuthService">
            <summary>
            系统OAuth服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.OAuth.SysOAuthService.SignIn(System.String,System.String)">
            <summary>
            第三方登录
            </summary>
            <param name="provider"></param>
            <param name="redirectUrl"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.OAuth.SysOAuthService.SignInCallback(System.String,System.String)">
            <summary>
            授权回调
            </summary>
            <param name="provider"></param>
            <param name="redirectUrl"></param>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.OnlineUser.Dto.PageOnlineUserInput.UserName">
            <summary>
            账号名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.OnlineUser.Dto.PageOnlineUserInput.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.OnlineUser.SysOnlineUserService">
            <summary>
            系统在线用户服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.OnlineUser.SysOnlineUserService.Page(GameFrameX.Core.Service.OnlineUser.Dto.PageOnlineUserInput)">
            <summary>
            获取在线用户分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.OnlineUser.SysOnlineUserService.ForceOffline(GameFrameX.Entity.System.SysOnlineUser)">
            <summary>
            强制下线
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.OnlineUser.SysOnlineUserService.PublicNotice(GameFrameX.Entity.System.SysNotice,System.Collections.Generic.List{System.Int64})">
            <summary>
            发布站内消息
            </summary>
            <param name="notice"></param>
            <param name="userIds"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.OnlineUser.SysOnlineUserService.SingleLogin(System.Int64)">
            <summary>
            单用户登录
            </summary>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.Org.Dto.OrgInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Org.Dto.OrgInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Org.Dto.OrgInput.Type">
            <summary>
            机构类型
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Org.Dto.AddOrgInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Org.SysOrgService">
            <summary>
            系统机构服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.GetList(GameFrameX.Core.Service.Org.Dto.OrgInput)">
            <summary>
            获取机构列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.HandlerOrgTree(System.Collections.Generic.List{GameFrameX.Entity.System.SysOrg},System.Collections.Generic.List{System.Int64})">
            <summary>
            递归禁用没权限的机构
            </summary>
            <param name="orgTree"></param>
            <param name="userOrgIdList"></param>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.AddOrg(GameFrameX.Core.Service.Org.Dto.AddOrgInput)">
            <summary>
            增加机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.UpdateOrg(GameFrameX.Core.Service.Org.Dto.UpdateOrgInput)">
            <summary>
            更新机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.DeleteOrg(GameFrameX.Core.Service.Org.Dto.DeleteOrgInput)">
            <summary>
            删除机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.DeleteUserOrgCache(System.Int64,System.Int64)">
            <summary>
            删除与此机构、父机构有关的用户机构缓存
            </summary>
            <param name="orgId"></param>
            <param name="orgPid"></param>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.GetUserOrgIdList">
            <summary>
            根据用户Id获取机构Id集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.GetUserRoleOrgIdList(System.Int64)">
            <summary>
            获取用户角色机构Id集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.GetUserOrgIdList(System.Collections.Generic.List{GameFrameX.Entity.System.SysRole})">
            <summary>
            根据角色Id集合获取机构Id集合
            </summary>
            <param name="roleList"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.GetOrgIdListByDataScope(System.Int32)">
            <summary>
            根据数据范围获取机构Id集合
            </summary>
            <param name="dataScope"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Org.SysOrgService.GetChildIdListWithSelfById(System.Int64)">
            <summary>
            根据节点Id获取子节点Id集合(包含自己)
            </summary>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.PageRoleInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.PageRoleInput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.AddRoleInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.AddRoleInput.MenuIdList">
            <summary>
            菜单Id集合
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Role.Dto.RoleMenuInput">
            <summary>
            授权角色菜单
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleMenuInput.MenuIdList">
            <summary>
            菜单Id集合
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Role.Dto.RoleMenuOutput">
            <summary>
            角色菜单输出参数
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleMenuOutput.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleMenuOutput.Title">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Role.Dto.RoleOrgInput">
            <summary>
            授权角色机构
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleOrgInput.DataScope">
            <summary>
            数据范围
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleOrgInput.OrgIdList">
            <summary>
            机构Id集合
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Role.Dto.RoleOutput">
            <summary>
            角色列表输出参数
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleOutput.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleOutput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Role.Dto.RoleOutput.Code">
            <summary>
            编码
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Role.SysRoleMenuService">
            <summary>
            系统角色菜单服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleMenuService.GetRoleMenuIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据角色Id集合获取菜单Id集合
            </summary>
            <param name="roleIdList"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleMenuService.GrantRoleMenu(GameFrameX.Core.Service.Role.Dto.RoleMenuInput)">
            <summary>
            授权角色菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleMenuService.DeleteRoleMenuByMenuIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据菜单Id集合删除角色菜单
            </summary>
            <param name="menuIdList"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleMenuService.DeleteRoleMenuByRoleId(System.Int64)">
            <summary>
            根据角色Id删除角色菜单
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.Role.SysRoleOrgService">
            <summary>
            系统角色机构服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleOrgService.GrantRoleOrg(GameFrameX.Core.Service.Role.Dto.RoleOrgInput)">
            <summary>
            授权角色机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleOrgService.GetRoleOrgIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据角色Id集合获取角色机构Id集合
            </summary>
            <param name="roleIdList"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleOrgService.DeleteRoleOrgByOrgIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据机构Id集合删除角色机构
            </summary>
            <param name="orgIdList"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleOrgService.DeleteRoleOrgByRoleId(System.Int64)">
            <summary>
            根据角色Id删除角色机构
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.Role.SysRoleService">
            <summary>
            系统角色服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.Page(GameFrameX.Core.Service.Role.Dto.PageRoleInput)">
            <summary>
            获取角色分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.GetList">
            <summary>
            获取角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.AddRole(GameFrameX.Core.Service.Role.Dto.AddRoleInput)">
            <summary>
            增加角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.UpdateRoleMenu(GameFrameX.Core.Service.Role.Dto.AddRoleInput)">
            <summary>
            更新角色菜单权限
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.UpdateRole(GameFrameX.Core.Service.Role.Dto.UpdateRoleInput)">
            <summary>
            更新角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.DeleteRole(GameFrameX.Core.Service.Role.Dto.DeleteRoleInput)">
            <summary>
            删除角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.GrantMenu(GameFrameX.Core.Service.Role.Dto.RoleMenuInput)">
            <summary>
            授权角色菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.GrantDataScope(GameFrameX.Core.Service.Role.Dto.RoleOrgInput)">
            <summary>
            授权角色数据范围
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.GetOwnMenuList(GameFrameX.Core.Service.Role.Dto.RoleInput)">
            <summary>
            根据角色Id获取菜单Id集合
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.GetOwnOrgList(GameFrameX.Core.Service.Role.Dto.RoleInput)">
            <summary>
            根据角色Id获取机构Id集合
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Role.SysRoleService.SetStatus(GameFrameX.Core.Service.Role.Dto.RoleInput)">
            <summary>
            设置角色状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.TenantInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.PageTenantInput.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.PageTenantInput.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.AddTenantInput.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.AddTenantInput.AdminAccount">
            <summary>
            租管账号
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.TenantUserInput.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.TenantIdInput.TenantId">
            <summary>
            租户Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.TenantOutput.Name">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.TenantOutput.AdminAccount">
            <summary>
            管理员账号
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.TenantOutput.Email">
            <summary>
            电子邮箱
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.Tenant.Dto.TenantOutput.Phone">
            <summary>
            电话
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.Tenant.SysTenantService">
            <summary>
            系统租户管理服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.Page(GameFrameX.Core.Service.Tenant.Dto.PageTenantInput)">
            <summary>
            获取租户分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.GetTenantDbList">
            <summary>
            获取库隔离的租户列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.AddTenant(GameFrameX.Core.Service.Tenant.Dto.AddTenantInput)">
            <summary>
            增加租户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.SetStatus(GameFrameX.Core.Service.Tenant.Dto.TenantInput)">
            <summary>
            设置租户状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.InitNewTenant(GameFrameX.Core.Service.Tenant.Dto.TenantOutput)">
            <summary>
            新增租户初始化
            </summary>
            <param name="tenant"></param>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.DeleteTenant(GameFrameX.Core.Service.Tenant.Dto.DeleteTenantInput)">
            <summary>
            删除租户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.UpdateTenant(GameFrameX.Core.Service.Tenant.Dto.UpdateTenantInput)">
            <summary>
            更新租户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.GrantMenu(GameFrameX.Core.Service.Role.Dto.RoleMenuInput)">
            <summary>
            授权租户管理员角色菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.GetOwnMenuList(GameFrameX.Core.Service.Tenant.Dto.TenantUserInput)">
            <summary>
            获取租户管理员角色拥有菜单Id集合
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.ResetPwd(GameFrameX.Core.Service.Tenant.Dto.TenantUserInput)">
            <summary>
            重置租户管理员密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.CacheTenant(System.Int64)">
            <summary>
            缓存所有租户
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.CreateDb(GameFrameX.Core.Service.Tenant.Dto.TenantInput)">
            <summary>
            创建租户数据库
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.UserList(GameFrameX.Core.Service.Tenant.Dto.TenantIdInput)">
            <summary>
            获取租户下的用户列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.Tenant.SysTenantService.GetTenantDbConnectionScope(System.Int64)">
            <summary>
            获取租户数据库连接
            </summary>
            <returns></returns>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.UserExtOrgInput.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.UserExtOrgInput.PosId">
            <summary>
            职位Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.UserExtOrgInput.JobNum">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.UserExtOrgInput.PosLevel">
            <summary>
            职级
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.UserExtOrgInput.JoinDate">
            <summary>
            入职日期
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.UserInput.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.PageUserInput.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.PageUserInput.RealName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.PageUserInput.Phone">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.PageUserInput.OrgId">
            <summary>
            查询时所选机构Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.AddUserInput.Account">
            <summary>
            账号
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.AddUserInput.RealName">
            <summary>
            真实姓名
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.AddUserInput.RoleIdList">
            <summary>
            角色集合
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.AddUserInput.ExtOrgIdList">
            <summary>
            扩展机构集合
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.DeleteUserInput.OrgId">
            <summary>
            机构Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.ChangePwdInput.PasswordOld">
            <summary>
            当前密码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.ChangePwdInput.PasswordNew">
            <summary>
            新密码
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.User.Dto.UserRoleInput">
            <summary>
            授权用户角色
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.UserRoleInput.UserId">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:GameFrameX.Core.Service.User.Dto.UserRoleInput.RoleIdList">
            <summary>
            角色Id集合
            </summary>
        </member>
        <member name="T:GameFrameX.Core.Service.User.SysUserExtOrgService">
            <summary>
            系统用户扩展机构服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserExtOrgService.GetUserExtOrgList(System.Int64)">
            <summary>
            获取用户扩展机构集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserExtOrgService.UpdateUserExtOrg(System.Int64,System.Collections.Generic.List{GameFrameX.Entity.System.SysUserExtOrg})">
            <summary>
            更新用户扩展机构
            </summary>
            <param name="userId"></param>
            <param name="extOrgList"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserExtOrgService.DeleteUserExtOrgByOrgIdList(System.Collections.Generic.List{System.Int64})">
            <summary>
            根据机构Id集合删除扩展机构
            </summary>
            <param name="orgIdList"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserExtOrgService.DeleteUserExtOrgByUserId(System.Int64)">
            <summary>
            根据用户Id删除扩展机构
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserExtOrgService.HasUserOrg(System.Int64)">
            <summary>
            根据机构Id判断是否有用户
            </summary>
            <param name="orgId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserExtOrgService.HasUserPos(System.Int64)">
            <summary>
            根据职位Id判断是否有用户
            </summary>
            <param name="posId"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.User.SysUserRoleService">
            <summary>
            系统用户角色服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserRoleService.GrantUserRole(GameFrameX.Core.Service.User.Dto.UserRoleInput)">
            <summary>
            授权用户角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserRoleService.DeleteUserRoleByRoleId(System.Int64)">
            <summary>
            根据角色Id删除用户角色
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserRoleService.DeleteUserRoleByUserId(System.Int64)">
            <summary>
            根据用户Id删除用户角色
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserRoleService.GetUserRoleList(System.Int64)">
            <summary>
            根据用户Id获取角色集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserRoleService.GetUserRoleIdList(System.Int64)">
            <summary>
            根据用户Id获取角色Id集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserRoleService.GetUserIdList(System.Int64)">
            <summary>
            根据角色Id获取用户Id集合
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.User.SysUserService">
            <summary>
            系统用户服务
            </summary>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.Page(GameFrameX.Core.Service.User.Dto.PageUserInput)">
            <summary>
            获取用户分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.AddUser(GameFrameX.Core.Service.User.Dto.AddUserInput)">
            <summary>
            增加用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.UpdateUser(GameFrameX.Core.Service.User.Dto.UpdateUserInput)">
            <summary>
            更新用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.UpdateRoleAndExtOrg(GameFrameX.Core.Service.User.Dto.AddUserInput)">
            <summary>
            更新角色和扩展机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.DeleteUser(GameFrameX.Core.Service.User.Dto.DeleteUserInput)">
            <summary>
            删除用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.GetBaseInfo">
            <summary>
            查看用户基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.UpdateBaseInfo(GameFrameX.Entity.System.SysUser)">
            <summary>
            更新用户基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.SetStatus(GameFrameX.Core.Service.User.Dto.UserInput)">
            <summary>
            设置用户状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.GrantRole(GameFrameX.Core.Service.User.Dto.UserRoleInput)">
            <summary>
            授权用户角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.ChangePwd(GameFrameX.Core.Service.User.Dto.ChangePwdInput)">
            <summary>
            修改用户密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.ResetPwd(GameFrameX.Core.Service.User.Dto.ResetPwdUserInput)">
            <summary>
            重置用户密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.GetOwnRoleList(System.Int64)">
            <summary>
            获取用户拥有角色集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.Service.User.SysUserService.GetOwnExtOrgList(System.Int64)">
            <summary>
            获取用户扩展机构集合
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.Service.User.UserManager">
            <summary>
            当前登录用户
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SignalR.SignalRSetup.AddSignalR(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Newtonsoft.Json.JsonSerializerSettings})">
            <summary>
            即时消息SignalR注册
            </summary>
            <param name="services"></param>
            <param name="SetNewtonsoftJsonSetting"></param>
        </member>
        <member name="T:GameFrameX.Core.SignatureAuth.GetAccessSecretContext">
            <summary>
            获取 AccessKey 关联 AccessSecret 方法的上下文
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.GetAccessSecretContext.AccessKey">
            <summary>
            身份标识
            </summary>
        </member>
        <member name="T:GameFrameX.Core.SignatureAuth.SignatureAuthenticationDefaults">
            <summary>
            Signature 身份验证处理程序相关的默认值
            </summary>
        </member>
        <member name="F:GameFrameX.Core.SignatureAuth.SignatureAuthenticationDefaults.AuthenticationScheme">
            <summary>
            SignatureAuthenticationOptions.AuthenticationScheme 使用的默认值
            </summary>
        </member>
        <member name="F:GameFrameX.Core.SignatureAuth.SignatureAuthenticationDefaults.AuthenticateFailMsgKey">
            <summary>
            附加在 HttpContext Item 中验证失败消息的 Key
            </summary>
        </member>
        <member name="T:GameFrameX.Core.SignatureAuth.SignatureAuthenticationEvent">
            <summary>
            Signature 身份验证事件
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureAuthenticationEvent.OnGetAccessSecret">
            <summary>
            获取或设置获取 AccessKey 的 AccessSecret 的逻辑处理
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureAuthenticationEvent.OnChallenge">
            <summary>
            获取或设置质询的逻辑处理
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureAuthenticationEvent.OnValidated">
            <summary>
            获取或设置已验证的逻辑处理
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationEvent.GetAccessSecret(GameFrameX.Core.SignatureAuth.GetAccessSecretContext)">
            <summary>
            获取 AccessKey 的 AccessSecret
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationEvent.Challenge(GameFrameX.Core.SignatureAuth.SignatureChallengeContext)">
            <summary>
            质询
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationEvent.Validated(GameFrameX.Core.SignatureAuth.SignatureValidatedContext)">
            <summary>
            已验证成功
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.SignatureAuth.SignatureAuthenticationExtensions">
            <summary>
            Signature 身份验证扩展
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationExtensions.AddSignatureAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            注册 Signature 身份验证处理模块
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationExtensions.AddSignatureAuthentication(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{GameFrameX.Core.SignatureAuth.SignatureAuthenticationOptions})">
            <summary>
            注册 Signature 身份验证处理模块
            </summary>
            <param name="builder"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.SignatureAuth.SignatureAuthenticationHandler">
            <summary>
            Signature 身份验证处理
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationHandler.CreateEventsAsync">
            <summary>
            确保创建的 Event 类型是 DigestEvents
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationHandler.GetMessageForSign(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取用于签名的消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationHandler.SignData(System.Byte[],System.String)">
            <summary>
            对数据进行签名
            </summary>
            <param name="secret"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SignatureAuth.SignatureAuthenticationHandler.AuthenticateResultFailAsync(System.String)">
            <summary>
            返回验证失败结果，并在 Items 中增加 <see cref="F:GameFrameX.Core.SignatureAuth.SignatureAuthenticationDefaults.AuthenticateFailMsgKey"/>，记录身份验证失败消息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.SignatureAuth.SignatureAuthenticationOptions">
            <summary>
            Signature 身份验证选项
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureAuthenticationOptions.AllowedDateDrift">
            <summary>
            请求时间允许的偏差范围
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureAuthenticationOptions.Events">
            <summary>
            Signature 身份验证事件
            </summary>
        </member>
        <member name="T:GameFrameX.Core.SignatureAuth.SignatureChallengeContext">
            <summary>
            Signature 身份验证质询上下文
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureChallengeContext.AuthenticateFailure">
            <summary>
            在认证期间出现的异常
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureChallengeContext.Handled">
            <summary>
            指定是否已被处理，如果已处理，则跳过默认认证逻辑
            </summary>
        </member>
        <member name="T:GameFrameX.Core.SignatureAuth.SignatureValidatedContext">
            <summary>
            Signature 身份验证已验证上下文
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureValidatedContext.AccessKey">
            <summary>
            身份标识
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SignatureAuth.SignatureValidatedContext.AccessSecret">
            <summary>
            密钥
            </summary>
        </member>
        <member name="T:GameFrameX.Core.SqlSugar.ISqlSugarEntitySeedData`1">
            <summary>
            实体种子数据接口
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.ISqlSugarEntitySeedData`1.HasData">
            <summary>
            种子数据
            </summary>
            <returns></returns>
        </member>
        <member name="F:GameFrameX.Core.SqlSugar.SqlSugarFilter._cache">
            <summary>
            缓存全局查询过滤器（内存缓存）
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarFilter.DeleteUserOrgCache(System.Int64,System.String)">
            <summary>
            删除用户机构缓存
            </summary>
            <param name="userId"></param>
            <param name="dbConfigId"></param>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarFilter.SetOrgEntityFilter(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            配置用户机构集合过滤器
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarFilter.SetDataScopeFilter(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            配置用户仅本人数据过滤器
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarFilter.SetCustomEntityFilter(SqlSugar.SqlSugarScopeProvider)">
            <summary>
            配置自定义过滤器
            </summary>
        </member>
        <member name="T:GameFrameX.Core.SqlSugar.IEntityFilter">
            <summary>
            自定义实体过滤器接口
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.IEntityFilter.AddEntityFilter">
            <summary>
            实体过滤器
            </summary>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1">
            <summary>
            分页泛型集合
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="P:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1.Page">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1.PageSize">
            <summary>
            页容量
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1.Total">
            <summary>
            总条数
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1.TotalPages">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1.Items">
            <summary>
            当前页集合
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1.HasPrevPage">
            <summary>
            是否有上一页
            </summary>
        </member>
        <member name="P:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1.HasNextPage">
            <summary>
            是否有下一页
            </summary>
        </member>
        <member name="T:GameFrameX.Core.SqlSugar.SqlSugarPagedExtensions">
            <summary>
            分页拓展类
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarPagedExtensions.ToPagedList``2(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <param name="expression">查询结果 Select 表达式</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarPagedExtensions.ToPagedList``1(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32)">
            <summary>
            分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarPagedExtensions.ToPagedListAsync``2(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <param name="expression">查询结果 Select 表达式</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarPagedExtensions.ToPagedListAsync``1(SqlSugar.ISugarQueryable{``0},System.Int32,System.Int32)">
            <summary>
            分页拓展
            </summary>
            <param name="query"><see cref="T:SqlSugar.ISugarQueryable`1"/>对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarPagedExtensions.ToPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            分页拓展
            </summary>
            <param name="list">集合对象</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarPagedExtensions.CreateSqlSugarPagedList``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32,System.Int32)">
            <summary>
            创建 <see cref="T:GameFrameX.Core.SqlSugar.SqlSugarPagedList`1"/> 对象
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="items">分页内容的对象集合</param>
            <param name="total">总条数</param>
            <param name="pageIndex">当前页码，从1开始</param>
            <param name="pageSize">页码容量</param>
            <returns></returns>
        </member>
        <member name="T:GameFrameX.Core.SqlSugar.SqlSugarRepository`1">
            <summary>
            SqlSugar 实体仓储
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarSetup.AddSqlSugar(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            SqlSugar 上下文初始化
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarSetup.SetDbConfig(GameFrameX.Core.Option.DbConnectionConfig)">
            <summary>
            配置连接属性
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarSetup.SetDbAop(SqlSugar.SqlSugarScopeProvider,System.Boolean)">
            <summary>
            配置Aop
            </summary>
            <param name="db"></param>
            <param name="enableConsoleSql"></param>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarSetup.SetDbDiffLog(SqlSugar.SqlSugarScopeProvider,GameFrameX.Core.Option.DbConnectionConfig)">
            <summary>
            开启库表差异化日志
            </summary>
            <param name="db"></param>
            <param name="config"></param>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarSetup.InitDatabase(SqlSugar.SqlSugarScope,GameFrameX.Core.Option.DbConnectionConfig)">
            <summary>
            初始化数据库
            </summary>
            <param name="db"></param>
            <param name="config"></param>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarSetup.InitTenantDatabase(SqlSugar.ITenant,GameFrameX.Core.Option.DbConnectionConfig)">
            <summary>
            初始化租户业务数据库
            </summary>
            <param name="iTenant"></param>
            <param name="config"></param>
        </member>
        <member name="T:GameFrameX.Core.SqlSugar.SqlSugarUnitOfWork">
            <summary>
            SqlSugar 事务和工作单元
            </summary>
        </member>
        <member name="F:GameFrameX.Core.SqlSugar.SqlSugarUnitOfWork._sqlSugarClient">
            <summary>
            SqlSugar 对象
            </summary>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarUnitOfWork.#ctor(SqlSugar.ISqlSugarClient)">
            <summary>
            构造函数
            </summary>
            <param name="sqlSugarClient"></param>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarUnitOfWork.BeginTransaction(Microsoft.AspNetCore.Mvc.Filters.FilterContext,Furion.DatabaseAccessor.UnitOfWorkAttribute)">
            <summary>
            开启工作单元处理
            </summary>
            <param name="context"></param>
            <param name="unitOfWork"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarUnitOfWork.CommitTransaction(Microsoft.AspNetCore.Mvc.Filters.FilterContext,Furion.DatabaseAccessor.UnitOfWorkAttribute)">
            <summary>
            提交工作单元处理
            </summary>
            <param name="resultContext"></param>
            <param name="unitOfWork"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarUnitOfWork.RollbackTransaction(Microsoft.AspNetCore.Mvc.Filters.FilterContext,Furion.DatabaseAccessor.UnitOfWorkAttribute)">
            <summary>
            回滚工作单元处理
            </summary>
            <param name="resultContext"></param>
            <param name="unitOfWork"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:GameFrameX.Core.SqlSugar.SqlSugarUnitOfWork.OnCompleted(Microsoft.AspNetCore.Mvc.Filters.FilterContext,Microsoft.AspNetCore.Mvc.Filters.FilterContext)">
            <summary>
            执行完毕（无论成功失败）
            </summary>
            <param name="context"></param>
            <param name="resultContext"></param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
